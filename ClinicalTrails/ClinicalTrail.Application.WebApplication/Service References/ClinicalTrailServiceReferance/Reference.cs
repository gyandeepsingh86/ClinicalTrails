//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClinicalTrailFaultContract", Namespace="http://schemas.datacontract.org/2004/07/ClinicalTrail.Services.FaultContract")]
    [System.SerializableAttribute()]
    public partial class ClinicalTrailFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClinicalTrailServiceReferance.IClinicalTrailsWCFServices")]
    public interface IClinicalTrailsWCFServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClinicalTrailsWCFServices/TestConnection", ReplyAction="http://tempuri.org/IClinicalTrailsWCFServices/TestConnectionResponse")]
        ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.VoidResponse TestConnection(ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.VoidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClinicalTrailsWCFServices/GetAllCity", ReplyAction="http://tempuri.org/IClinicalTrailsWCFServices/GetAllCityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.ClinicalTrailFaultContract), Action="http://tempuri.org/IClinicalTrailsWCFServices/GetAllCityClinicalTrailFaultContrac" +
            "tFault", Name="ClinicalTrailFaultContract", Namespace="http://schemas.datacontract.org/2004/07/ClinicalTrail.Services.FaultContract")]
        ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.GetAllCity_Response GetAllCity(ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.GetAllCity_Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClinicalTrailsWCFServices/GetAllState", ReplyAction="http://tempuri.org/IClinicalTrailsWCFServices/GetAllStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.ClinicalTrailFaultContract), Action="http://tempuri.org/IClinicalTrailsWCFServices/GetAllStateClinicalTrailFaultContra" +
            "ctFault", Name="ClinicalTrailFaultContract", Namespace="http://schemas.datacontract.org/2004/07/ClinicalTrail.Services.FaultContract")]
        ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.GetAllState_Response GetAllState(ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.GetAllState_Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClinicalTrailsWCFServices/GetAllCountry", ReplyAction="http://tempuri.org/IClinicalTrailsWCFServices/GetAllCountryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.ClinicalTrailFaultContract), Action="http://tempuri.org/IClinicalTrailsWCFServices/GetAllCountryClinicalTrailFaultCont" +
            "ractFault", Name="ClinicalTrailFaultContract", Namespace="http://schemas.datacontract.org/2004/07/ClinicalTrail.Services.FaultContract")]
        ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.GetAllCountry_Response GetAllCountry(ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.GetAllCountry_Request request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VoidRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class VoidRequest {
        
        public VoidRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VoidResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class VoidResponse {
        
        public VoidResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllCity_Request", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllCity_Request {
        
        public GetAllCity_Request() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllCity_Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllCity_Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.Nullable<int> StateId;
        
        public GetAllCity_Response() {
        }
        
        public GetAllCity_Response(int ID, string Name, System.Nullable<int> StateId) {
            this.ID = ID;
            this.Name = Name;
            this.StateId = StateId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllState_Request", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllState_Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.Nullable<int> StateId;
        
        public GetAllState_Request() {
        }
        
        public GetAllState_Request(int ID, string Name, System.Nullable<int> StateId) {
            this.ID = ID;
            this.Name = Name;
            this.StateId = StateId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllState_Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllState_Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.Nullable<int> StateId;
        
        public GetAllState_Response() {
        }
        
        public GetAllState_Response(int ID, string Name, System.Nullable<int> StateId) {
            this.ID = ID;
            this.Name = Name;
            this.StateId = StateId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllCountry_Request", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllCountry_Request {
        
        public GetAllCountry_Request() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllCountry_Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllCountry_Response {
        
        public GetAllCountry_Response() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClinicalTrailsWCFServicesChannel : ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.IClinicalTrailsWCFServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClinicalTrailsWCFServicesClient : System.ServiceModel.ClientBase<ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.IClinicalTrailsWCFServices>, ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.IClinicalTrailsWCFServices {
        
        public ClinicalTrailsWCFServicesClient() {
        }
        
        public ClinicalTrailsWCFServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClinicalTrailsWCFServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClinicalTrailsWCFServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClinicalTrailsWCFServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.VoidResponse TestConnection(ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.VoidRequest request) {
            return base.Channel.TestConnection(request);
        }
        
        public ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.GetAllCity_Response GetAllCity(ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.GetAllCity_Request request) {
            return base.Channel.GetAllCity(request);
        }
        
        public ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.GetAllState_Response GetAllState(ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.GetAllState_Request request) {
            return base.Channel.GetAllState(request);
        }
        
        public ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.GetAllCountry_Response GetAllCountry(ClinicalTrail.Application.WebApplication.ClinicalTrailServiceReferance.GetAllCountry_Request request) {
            return base.Channel.GetAllCountry(request);
        }
    }
}
